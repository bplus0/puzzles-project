@using Puzzles.Bl.Extensions
@using Puzzles.Bl.NumberToString.Models
@using Puzzles.Bl.PalindromeChecker.Models
@model PalindromeCheckerModel

@{
    var guid = Guid.NewGuid();
    var containerid = $"divcontainer";
    var resultdivid = $"divresults-{guid}";
}

<div id="@containerid">

    @if (Model.Saved)
    {
        var style = Model.PalindromeFound ? $"color:green; " : $"color:red;";

        <br />
        <div id="@resultdivid">
            <h5 style="@style">@Model.ReturnMessage</h5>
        </div>
    }


    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <form asp-controller="PalindromeChecker"
          asp-action="SubmitPalindromeCheck"
          method="POST"
          class="form-horizontal"
          role="form"
          data-ajax="true"
          data-ajax-method="POST"
          data-ajax-mode="replace"
          data-ajax-update="#@containerid">


        <div class="form-group">
            @*<input asp-for="PreviousGuesses" type="hidden" />*@
        @*    @Html.TextBoxFor(x=> x.PreviousGuesses)*@

            <label for="exampleInputEmail1">Enter A Number</label>


            <input type="number"
                   asp-for="NumberToCheck"
                   min="0"
                   class="form-control"
                   id="inputNumberInput"
                   placeholder="Enter Any Number...">
        </div>



        <button type="submit" class="btn btn-primary">Submit</button>



    </form>



    <br />
@*    <div>
        @if (!Model.PreviousGuesses.IsNullOrWhiteSpace())
        {
            <div>
                <p>Previous guesses</p>

                <p>@Model.PreviousGuesses</p>
            </div>
        }
    </div>*@


</div>